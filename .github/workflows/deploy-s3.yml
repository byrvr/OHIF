name: Build and Deploy to S3

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  NODE_VERSION: 20
  AWS_REGION: eu-central-1
  S3_BUCKET: ohif-viewer-obz

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    permissions:
      contents: read
      id-token: write  # Required for OIDC

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: yarn run build:ci

      - name: Configure AWS credentials via OIDC
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions-OHIF-Deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to S3
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          # Sync build files to S3 bucket with caching
          aws s3 sync platform/app/dist/ s3://${{ env.S3_BUCKET }}/ \
            --delete \
            --cache-control "public, max-age=31536000" \
            --exclude "*.html" \
            --exclude "*.json"
          
          # Upload HTML/JSON files with no-cache headers
          aws s3 sync platform/app/dist/ s3://${{ env.S3_BUCKET }}/ \
            --exclude "*" \
            --include "*.html" \
            --include "*.json" \
            --cache-control "no-cache, no-store, must-revalidate"

      - name: Invalidate CloudFront (optional)
        if: github.ref == 'refs/heads/master' && github.event_name == 'push' && secrets.CLOUDFRONT_DISTRIBUTION_ID
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Output deployment info
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: |
          echo "ðŸš€ Deployment complete!"
          echo "S3 Website URL: http://${{ env.S3_BUCKET }}.s3-website.${{ env.AWS_REGION }}.amazonaws.com"
          if [ ! -z "${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}" ]; then
            echo "CloudFront invalidation initiated for distribution: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
          fi